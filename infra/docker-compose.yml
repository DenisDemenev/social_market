version: '3.0'
services:
  db:
    container_name: postgres
    image: postgres:12.4
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_value:/var/lib/pgadmin_data/
    env_file:
      - ./.env


  backend:
    image: ekbtoys/social:v2
    container_name: social
    restart: always
    volumes:
      - static_value:/backend/static/
      - media_value:/backend/media/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  frontend:
    image: ekbtoys/social_frontend:v2
    container_name: social_frontend
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./smax.crt:/etc/ssl/smax.crt
      - ./smax.key:/etc/ssl/smax.key
      - ../frontend/build:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    restart: always
    depends_on:
      - frontend
      - backend
  
  redis:
    image: redis:alpine
  
  celery:
    image: celery:latest
    volumes:
      - ./celery/:/backend/celery/
    env_file:
      - ./.env
    depends_on:
      - redis
      - backend
  
  # celery-beat:
  #   build: 
  #     context: .
  #   command: celery -A core beat -l info
  #   volumes:
  #     - ./celery/:/backend/celery/
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - redis

volumes:
  postgres_data:
  pgadmin_value:
  static_value:
  media_value:
  celery:
